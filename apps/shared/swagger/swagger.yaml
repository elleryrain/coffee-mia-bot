openapi: 3.0.0
info:
  title: документация для api для mia coffee bot
  version: 4.2.8
  description: Описание api для демонстрации документации в формате JSON
paths:
  /api/item/grain:
    get:
      operationId: getGrains
      summary: Получение всех зёрен
      description: роут для получения всех зёрен
      responses:
        '200':
          description: успешное получение данных
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nameCategory:
                      type: string
                    description:
                      type: string
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ShortItem'
  /api/item/dripPacks:
    get:
      operationId: getDripPacks
      summary: Получение всех дрип пакетов
      description: роут для получения всех дрип пакетов
      responses:
        '200':
          description: успешное получение всех дрип пакетов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nameCategory:
                      type: string
                    description:
                      type: string
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ShortItemWithCost'
  /api/item/other:
    get:
      operationId: getOtherItems
      summary: Получение разных вещей
      description: роут для получения разных вещей
      responses:
        '200':
          description: успешное получение всех разных вещей
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nameCategory:
                      type: string
                    description:
                      type: string
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/ShortItemWithCost'
  /api/item/new:
    get:
      operationId: getNewItems
      summary: Получение всех новинок
      description: роут для получения всех новинок
      responses:
        '200':
          description: успешное получение всех новинок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortItem'
  /api/user/favorite:
    get:
      operationId: getFavoriteItems
      summary: Получение избранных товаров пользователя
      description: роут для получения всей продукции, которую пользователь добавил в избранное
      responses:
        '200':
          description: успешное получения всей продукции, добавленной в избранное
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortItem'
    post:
      operationId: addFavoriteItem
      summary: Добавление товара в избранное
      description: роут для добавления определённого товара в избранное
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: number
              required:
                - itemId
      responses:
        '200':
          description: успешное добавление товара в избранное
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      operationId: removeFavoriteItem
      summary: Удаление товара из избранного
      description: роут для удаления предмета из избранного
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: number
              required:
                - itemId
      responses:
        '200':
          description: успешное выполнение роута
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/item:
    get:
      operationId: getItemById
      summary: Получение информации о товаре по ID
      description: получение информации о товаре по id
      parameters:
        - name: idItem
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: успешное получение информации о товаре
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
  /api/item/popular:
    get:
      operationId: getPopularItems
      summary: Получение часто покупаемых товаров
      description: Получение часто покупаемых товаров
      responses:
        '200':
          description: успешное получение информации о популярных
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortItem'
  /api/grindingTypes:
    get:
      operationId: getGrindingTypes
      summary: Получение всех типов помола для кофе
      description: Получение всех типов помола для кофе
      responses:
        '200':
          description: успешное получение информации о всех типах помола
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrindingType'
  /api/user/phone:
    put:
      operationId: 'updateUserPhone'
      summary: Обновление информации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
      responses:
        200:
          description: 'успешное обновление профиля пользователя'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
  /api/user/name:
    put:
      operationId: 'updateUserName'
      summary: Обновление информации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        200:
          description: 'успешное обновление профиля пользователя'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
  /api/user/username:
    put:
      operationId: 'updateUserUsername'
      summary: Обновление информации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: 'успешное обновление профиля пользователя'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
  /api/user/order:
    post:
      summary: 'создание заказа пользователя'
      operationId: 'createUserOrder'
      description: 'Создание заказа пользователя'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      itemId:
                        type: number
                      itemVarId:
                        type: number
                      itemGrindingTypeId:
                        type: number
                      typeItem:
                        type: string
      responses:
        '200':
          description: 'успешное выполнение роута'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: 'получение всех заказов пользователя'
      responses:
        '200':
          description: 'успешное выполнение роута'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    image:
                      type: string
                    name:
                      type: string
                    weight:
                      type: number
                    cost:
                      type: number
  /api/user:
    get:
      operationId: getUserInfo
      summary: Получение информации о пользователе
      description: получение информации о пользователе (роут нужен для того, чтобы в начале, когда пользователь запускает приложение, то происходит проверка захода в приложение
      responses:
        '200':
          description: успешное получение выполнение захода пользователя или регистрации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        icon:
          type: string
      required:
        - title
        - description
        - icon
    ShortItem:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        image:
          type: string
          nullable: true
        favorite:
          type: boolean
      required:
        - id
        - title
        - image
        - favorite
    ShortItemWithCost:
      allOf:
        - $ref: '#/components/schemas/ShortItem'
        - type: object
          properties:
            cost:
              type: number
            discountCost:
              type: number
          required:
            - cost
    ItemChars:
      type: object
      properties:
        region:
          type: string
        country:
          type: string
        roasting:
          type: string
        cultivation:
          type: string
        height:
          type: number
        quality:
          type: string
      required:
        - region
        - country
        - roasting
        - cultivation
        - height
        - quality
    ItemConfiguration:
      type: object
      properties:
        id:
          type: number
        cost:
          type: number
        weight:
          type: number
      required:
        - id
        - cost
        - weight
    ItemInfo:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        descriptors:
          type: array
          items:
            type: string
      required:
        - id
        - title
        - descriptors
    Item:
      type: object
      allOf:
        - $ref: '#/components/schemas/ItemInfo'
        - $ref: '#/components/schemas/ItemChars'
        - type: object
          properties:
            configurations:
              type: array
              items:
                $ref: '#/components/schemas/ItemConfiguration'
            images:
              type: array
              items:
                type: string
    GrindingType:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
      required:
        - id
        - title
    UserProperties:
      type: object
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        phone:
          type: string
      required:
        - id
        - firstName
        - lastName
        - username
